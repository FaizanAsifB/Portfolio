---
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import '@/styles/globals.css'
const { title } = Astro.props
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme')
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'light'
  }
  const isDark = getThemePreference() === 'dark'
  document.documentElement.classList[isDark ? 'add' : 'remove']('dark')

  if (typeof localStorage !== 'undefined') {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('dark')
      localStorage.setItem('theme', isDark ? 'dark' : 'light')
    })
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['class']
    })
  }
</script>

<html
  lang='en'
  class='scroll-smooth font-mada scrollbar-thin scrollbar-track-secondary scrollbar-thumb-primary scrollbar-track-rounded-full scrollbar-thumb-rounded-full'
>
  <head>
    <meta charset='utf-8' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='viewport' content='width=device-width' />
    <meta name='generator' content={Astro.generator} />
    <script
      src='https://kit.fontawesome.com/0b5ea53b5e.js'
      crossorigin='anonymous'></script>
    <title>{title}</title>
  </head>
  <body class='scroll-smooth bg-background text-foreground'>
    <Header />
    <slot />
    <Footer />
    <script>
      // const getThemePreference = () => {
      //   if (
      //     typeof localStorage !== 'undefined' &&
      //     localStorage.getItem('theme')
      //   ) {
      //     console.log(localStorage.getItem('theme'))
      //     return localStorage.getItem('theme')
      //   }
      //   return window.matchMedia('(prefers-color-scheme: dark)').matches
      //     ? 'dark'
      //     : 'light'
      // }
      // const isDark = getThemePreference() === 'dark'
      // document.documentElement.classList[isDark ? 'add' : 'remove']('dark')

      // if (typeof localStorage !== 'undefined') {
      //   const observer = new MutationObserver(() => {
      //     const isDark = document.documentElement.classList.contains('dark')

      //     localStorage.setItem('theme', isDark ? 'dark' : 'light')
      //   })
      //   observer.observe(document.documentElement, {
      //     attributes: true,
      //     attributeFilter: ['class']
      //   })
      //   document.addEventListener('astro:before-swap', (e) => {
      //     observer.disconnect()
      //   })
      //   document.addEventListener('astro:after-swap', () => {
      //     localStorage.getItem('theme') === 'dark'
      //       ? document.documentElement.classList.add('dark')
      //       : document.documentElement.classList.add('light')
      //   })
      // }
    </script>
  </body>
</html>
