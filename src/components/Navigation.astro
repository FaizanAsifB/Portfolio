---
import ThemeSwitch from "@/components/ui/ThemeSwitch.tsx";

const navLinks = [
  {
    title: "Home",
    href: "#hero",
  },
  {
    title: "About",
    href: "#about",
  },
  {
    title: "Skills",
    href: "#skills",
  },
  {
    title: "Projects",
    href: "#projects",
  },
  {
    title: "Contact",
    href: "#contact",
  },
];
---

<header
  data-scrolled="false"
  class="w-full data-[scrolled=true]:shadow bg-transparent fixed top-0 z-50 py-6 data-[scrolled=true]:bg-background/90"
>
  <div class="container flex items-center justify-between text-2xl">
    <p class="text-[#ca2e55] font-semibold">
      &lt;<span class="text-primary">FA </span>/&gt;
    </p>
    <input
      type="checkbox"
      role="button"
      aria-label="Display the menu"
      class="menu lg:hidden"
    />
    <nav class="lg:flex gap-8 items-center hidden">
      <ul class="flex gap-8">
        {
          navLinks.map((link) => (
            <li>
              <a
                href={link.href}
                data-scrolled="false"
                class="relative before:transition-transform before:duration-300 before:absolute before:w-full before:h-1 before:rounded-sm before:-bottom-1 before:left:0 before:origin-right before:scale-x-0 before:bg-primary hover:before:origin-left hover:before:scale-x-100 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background rounded-lg data-[scrolled=true]:before:origin-left 
                data-[scrolled=true]:before:scale-x-100"
              >
                {link.title}
              </a>
            </li>
          ))
        }
      </ul>
      <ThemeSwitch client:load />
    </nav>
  </div>
</header>

<script>
  const navLinkEls = document.querySelectorAll(
    "nav>ul>li>a",
  ) as NodeListOf<HTMLAnchorElement>;
  const sectionEls = document.querySelectorAll("section");
  const heroEl = document.querySelector("#hero img") as HTMLImageElement;
  const headerEl = document.querySelector("header") as HTMLElement;
  const headerBot = headerEl?.offsetHeight;
  const heroTop = heroEl.offsetTop;

  const intersectedHero = () => {
    if (
      window.scrollY >= heroTop - headerBot &&
      headerEl.dataset.scrolled === "false"
    )
      headerEl.dataset.scrolled = "true";
    if (
      window.scrollY <= heroTop - headerBot &&
      headerEl.dataset.scrolled === "true"
    )
      headerEl.dataset.scrolled = "false";
  };

  const intersectedSections = () => {
    // if (
    //   window.scrollY >= heroTop - headerBot &&
    //   headerEl.dataset.scrolled === "false"
    // )
    //   headerEl.dataset.scrolled = "true";

    sectionEls.forEach((sectionEl) => {
      if (
        window.scrollY >= sectionEl.offsetTop - 450 &&
        window.scrollY < sectionEl.offsetHeight + sectionEl.offsetTop
      )
        navLinkEls.forEach((navLinkEl) => {
          navLinkEl.dataset.scrolled = "false";
          if (navLinkEl.href.includes(sectionEl.id))
            navLinkEl.dataset.scrolled = "true";
        });
    });
  };

  const handleIntersections = () => {
    intersectedHero();
    intersectedSections();
  };

  (() => handleIntersections())();

  window.onscroll = () => {
    handleIntersections();
  };
</script>

<style>
  .menu {
    --s: 25px; /* control the size */
    --c: hsl(var(--foreground)); /* the color */

    height: var(--s);
    aspect-ratio: 1;
    border: none;
    padding: 0;
    border-inline: calc(var(--s) / 2) solid #0000;
    box-sizing: content-box;
    --_g1: linear-gradient(var(--c) 20%, #0000 0 80%, var(--c) 0) no-repeat
      content-box border-box;
    --_g2: radial-gradient(
        circle closest-side at 50% 12.5%,
        var(--c) 95%,
        #0000
      )
      repeat-y content-box border-box;
    background:
      var(--_g2) left var(--_p, 0px) top,
      var(--_g1) left calc(var(--s) / 10 + var(--_p, 0px)) top,
      var(--_g2) right var(--_p, 0px) top,
      var(--_g1) right calc(var(--s) / 10 + var(--_p, 0px)) top;
    background-size:
      20% 80%,
      40% 100%;
    position: relative;
    clip-path: inset(0 25%);
    -webkit-mask: linear-gradient(90deg, #0000, #000 25% 75%, #0000);
    cursor: pointer;
    transition:
      background-position 0.3s var(--_s, 0.3s),
      clip-path 0s var(--_s, 0.6s);
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
  }
  .menu:before,
  .menu:after {
    content: "";
    position: absolute;
    border-radius: var(--s);
    inset: 40% 0;
    background: var(--c);
    transition: transform 0.3s calc(0.3s - var(--_s, 0.3s));
  }

  .menu:checked {
    clip-path: inset(0);
    --_p: calc(-1 * var(--s));
    --_s: 0s;
  }
  .menu:checked:before {
    transform: rotate(45deg);
  }
  .menu:checked:after {
    transform: rotate(-45deg);
  }
  .menu:focus-visible {
    clip-path: none;
    -webkit-mask: none;
    border: none;
    outline: 2px solid var(--c);
    outline-offset: 5px;
  }
</style>
