---
import { Badge } from '@/components/ui/badge'
import { buttonVariants } from '@/components/ui/button'
import { Icon } from 'astro-icon/components'
import type { CollectionEntry } from 'astro:content'
import { cn } from '@/lib/utils'
import ProjectAnimation from './animations/project-animation'
import { Image } from 'astro:assets'
import type { ImageMetadata } from 'astro'
import { getImage } from 'astro:assets'
interface Props {
  project: CollectionEntry<'projects'>
  isEven: boolean
}

const { project, isEven } = Astro.props
const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/project-images/*.{jpeg,jpg,png,gif}'
)

const attribution: { text: string; url: string; urlText: string } =
  project.data.attribution && Object.assign({}, ...project.data.attribution)

// const defaultImgPath = `/src/assets/project-images/${project.data.imgName}.jpg`

// const imgSquare = await getImage({
//   src: `/src/assets/project-images/${project.data.imgName}-square.webp`,
//   format: 'webp',
//   width: 450,
//   height: 450
// })

// const imgWide = await getImage({
//   src: `/src/assets/project-images/${project.data.imgName}-wide.webp`,
//   format: 'webp',
//   width: 700,
//   height: 394
// })

// if (project.data.imgName && !images[defaultImgPath])
//   throw new Error(
//     `"${defaultImgPath}" does not exist in glob: "src/assets/project-images/*.{jpeg,jpg,png,gif}"`
//   )
---

<ProjectAnimation client:load isEven={isEven}>
  <div
    class={cn(
      'gap-8 space-y-12 rounded-lg bg-background shadow-lg lg:flex lg:space-y-0 h-full lg:h-auto flex flex-col lg:flex-row hover:scale-[1.02] ',
      isEven ? 'lg:flex-row-reverse' : ''
    )}
  >
    {
      project.data.defaultImage && (
        <div class='lg:w-[450px] lgx:w-[500px] xl:w-[600px]'>
          <a href={project.data.websiteURL} target='_blank'>
            <picture>
              <source
                srcset={project.data.squareImage.src}
                media='(min-width: 1024px) and (max-width: 1159px)'
              />
              <source
                srcset={project.data.wideImage.src}
                media='(max-width: 767px)'
              />
              <Image
                src={project.data.defaultImage}
                widths={[450, 500, 600, 700]}
                sizes={`(min-width: 120px) 700px, (min-width: 1024px) 450px,  (min-width: 1160px) 500px, (min-width: 1280px) 600px`}
                alt={`preview image of ${project.data.title}`}
                class='block aspect-video h-full w-full rounded-t-lg object-cover object-top brightness-90 md:aspect-[4/3] lg:aspect-square lg:rounded-lg lg:object-center lgx:aspect-[4/3]'
              />
            </picture>
          </a>
        </div>
      )
    }
    <article
      class={cn(
        'flex flex-1 flex-col space-y-8 px-4 pb-6 lg:py-8',
        isEven ? 'lg:pr-0 pl-8' : 'lg:pl-0 pr-8'
      )}
    >
      <h3 class='text-nowrap capitalize'>{project.data.title}</h3>
      <div>
        <div class='relative'>
          <p class='md:h-[196px] lg:h-auto'>
            {project.data.description}
          </p>
          {
            project.data.attribution && (
              <small class='mt-1 flex items-center gap-1 text-muted-foreground md:absolute md:bottom-0 lg:static'>
                {attribution.text}

                <a
                  href={attribution.url}
                  target='_blank'
                  class='flex items-center gap-1 text-primary'
                >
                  {attribution.urlText}
                  <Icon name='external-link' size={12} />
                </a>
              </small>
            )
          }
        </div>

        <a
          href={project.slug}
          class={buttonVariants({
            variant: 'link',
            size: 'auto',
            className: 'mt-2'
          })}>Read the case study &rarr;</a
        >
      </div>
      <div class='flex flex-wrap items-center gap-2'>
        {project.data.tools.map((tool: string) => <Badge>{tool}</Badge>)}
      </div>
      <div class='flex flex-1 flex-col'>
        <div
          class='mt-auto flex flex-wrap items-center justify-center gap-4 lg:flex-nowrap lg:justify-start'
        >
          <a
            href={project.data.websiteURL}
            target='_blank'
            class={buttonVariants({
              variant: 'link',
              size: 'auto'
            })}
          >
            <span class='text-base'> View Website </span>
            <Icon name='website' />
          </a>

          <a
            href={project.data.githubURL}
            target='_blank'
            class={buttonVariants({
              variant: 'outline'
            })}
          >
            <Icon name='github' size={24} />
            <span class='text-base'>Source Code</span>
          </a>

          {
            project.data.videoURL && (
              <>
                <a
                  href={project.data.videoURL}
                  target='_blank'
                  class={buttonVariants({
                    variant: 'outline',
                    className: 'w-full lg:w-auto'
                  })}
                >
                  <Icon name='watch' size={24} />
                  <span class='text-base'>Watch Video</span>
                </a>
              </>
            )
          }
        </div>
      </div>
    </article>
  </div>
</ProjectAnimation>
